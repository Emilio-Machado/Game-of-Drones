// <auto-generated />
using System;
using Game_of_Drones.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Game_of_Drones.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20241105192135_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Game_of_Drones.DataAccess.Models.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Game_of_Drones.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerOneId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerTwoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerOneId");

                    b.HasIndex("PlayerTwoId");

                    b.HasIndex("WinnerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Game_of_Drones.Models.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KillMoveId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KillMoveId");

                    b.ToTable("Moves");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 11, 5, 16, 21, 35, 560, DateTimeKind.Local).AddTicks(3728),
                            IsActive = true,
                            Name = "Piedra"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2024, 11, 5, 16, 21, 35, 560, DateTimeKind.Local).AddTicks(3730),
                            IsActive = true,
                            Name = "Papel"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2024, 11, 5, 16, 21, 35, 560, DateTimeKind.Local).AddTicks(3731),
                            IsActive = true,
                            Name = "Tijera"
                        });
                });

            modelBuilder.Entity("Game_of_Drones.Models.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlayerOneMoveId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlayerTwoMoveId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerOneMoveId");

                    b.HasIndex("PlayerTwoMoveId");

                    b.HasIndex("WinnerId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("Game_of_Drones.Models.Game", b =>
                {
                    b.HasOne("Game_of_Drones.DataAccess.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayerOneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Game_of_Drones.DataAccess.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayerTwoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Game_of_Drones.DataAccess.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Game_of_Drones.Models.Move", b =>
                {
                    b.HasOne("Game_of_Drones.Models.Move", null)
                        .WithMany()
                        .HasForeignKey("KillMoveId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Game_of_Drones.Models.Round", b =>
                {
                    b.HasOne("Game_of_Drones.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Game_of_Drones.Models.Move", null)
                        .WithMany()
                        .HasForeignKey("PlayerOneMoveId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Game_of_Drones.Models.Move", null)
                        .WithMany()
                        .HasForeignKey("PlayerTwoMoveId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Game_of_Drones.DataAccess.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
